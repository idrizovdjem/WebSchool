@using WebSchool.ViewModels.Group
@model CreateGroupInputModel 

@{ 
    Layout = "_Layout";
    ViewData["Title"] = "New Group";
}

<link rel="stylesheet" href="~/css/createGroup.css" />

<form asp-controller="Groups" asp-action="Create" method="post" class="group-form">
    <div asp-validation-summary="All" class="error-message"></div>
    <h1>Create new group</h1>

    <p class="custom-error" id="customError"></p>
    <input asp-for="Name" class="name-input" placeholder="Group name..."  id="nameInput"/>
    <button class="create-button" id="createButton">Create</button>
</form>

@section Scripts {
    <script>
        const nameInput = document.getElementById('nameInput');
        const customError = document.getElementById('customError');
        const createButton = document.getElementById('createButton');

        nameInput.addEventListener('input', async () => {
            const groupName = nameInput.value;
            if (groupName === '') {
                return;
            }

            const isGroupNameAvailable = await checkGroupName(groupName);
            if (isGroupNameAvailable === false) {
                nameInput.style.borderColor = 'red';
                customError.textContent = 'This group name is already taken!';
                createButton.setAttribute('disabled', 'true');
            } else {
                nameInput.style.borderColor = '#5885AF';
                customError.textContent = '';
                createButton.removeAttribute('disabled');
            }
        });

        const checkGroupName = async (groupName) => {
            return await fetch(`/Groups/api/IsNameAvailable?groupName=${groupName}`)
                .then(response => response.json())
                .then(data => data)
                .catch(error => false);
        }
    </script>
}