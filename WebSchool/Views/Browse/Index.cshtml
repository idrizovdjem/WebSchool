@{ 
    Layout = "_Layout";
    ViewData["Title"] = "Browse";
}

<main class="browse-container">
    <form>
        <input id="groupNameInput" class="group-input" type="text" placeholder="Start typing group name..." />
        <button id="searchButton" class="search-button" type="button">Search</button>
    </form>

    <section class="found-groups-container">
        <table class="groups-table">
            <thead>
                <tr class="odd-row">
                    <th class="group-name-col">Group Name</th>
                    <th class="group-join-col">Join</th>
                </tr>
            </thead>
            <tbody id="tableBody">
            </tbody>
        </table>
    </section>
</main>

<style>
    .browse-container {
        text-align: center;
        width: 79%;
        float: left;
        height: 93vh;
        overflow-y: auto;
    }

    .groups-table {
        width: 90%;
        margin: auto;
        text-align: left;
        font-size: 3.5vh;
        border: 1px solid black;
    }

    .group-name-col {
        width: 78%;
        padding-left: 2%;
    }

    .group-join-col {
        padding-left: 2%;
        background: lightgray;
    }

    .group-join-button {
        display: block;
        width: 99%;
        font-size: 3.5vh;
        background: white;
        border: 1px solid black;
        transition: background ease 0.2s;
        text-decoration: none;
        color: black;
        text-align: center;
    }

        .group-join-button:hover {
            cursor: pointer;
        }

    .not-joined {
        border: 1px solid black;
        background: white;
    }

        .not-joined:hover {
            color: white;
            background: #5885AF;
            border-color: #5885AF;
        }

    .joined {
        color: white;
        background: #5885AF;
        border-color: #5885AF;
    }

    .waiting-approval {
        background: #FFD700;
        color: black;
        border-color: #FFD700;
    }

    .odd-row {
        background: lightgray;
    }

    .even-row {
        background: white;
    }

    .found-groups-container {
        height: 78vh;
        width: 85%;
        margin: auto;
        margin-top: 3vh;
        overflow-y: auto;
    }

    .group-input {
        width: 60%;
        font-size: 4vh;
        border: none;
        border-bottom: 3px solid lightgray;
        outline: none;
        transition: border ease 0.5s;
        margin: 2vh 0;
    }

    .search-button {
        font-size: 3vh;
        padding: 0.5% 2%;
        margin-left: 2%;
        border: 1px solid black;
        background: white;
        transition: background ease 0.2s;
    }

        .search-button:hover {
            color: #5885AF;
            background: #5885AF;
            border-color: #5885AF;
            color: white;
            cursor: pointer;
        }
</style>

@section Scripts {
    <script>
        const groupNameInput = document.getElementById('groupNameInput');
        const searchButton = document.getElementById('searchButton');
        const tableBody = document.getElementById('tableBody');

        searchButton.addEventListener('click', async () => {
            const groupName = groupNameInput.value.trim();
            const foundGroups = await fetchGroupsNames(groupName);
            attachGroups(foundGroups);
        });

        const fetchGroupsNames = async (groupName) => {
            return await fetch(`apiGroups/GetGroupsByName?groupName=${groupName}`)
                .then(response => response.json())
                .then(data => data)
                .catch(error => []);
        }

        const attachGroups = (groups) => {
            tableBody.innerHTML = '';

            groups.forEach((group, index) => {
                console.log(group);
                const tableRow = document.createElement('tr');
                const rowClass = index % 2 == 0 ? "event-row" : "odd-row";
                tableRow.classList.add(rowClass);

                const nameData = document.createElement('td');
                nameData.classList.add('group-name-col');
                nameData.textContent = group.name;

                const linkData = document.createElement('td');
                const requestLink = document.createElement('a');
                requestLink.classList.add('group-join-button');

                if (group.requestStatus === 'NotApplied') {
                    requestLink.classList.add('not-joined');
                    requestLink.textContent = 'Send Request';
                    requestLink.href = '/Applications/Apply?groupId=' + group.id;
                } else if (group.requestStatus === 'WaitingApproval') {
                    requestLink.classList.add('waiting-approval');
                    requestLink.textContent = 'Waiting approval';
                } else if (group.requestStatus === 'InGroup') {
                    requestLink.classList.add('joined');
                    requestLink.textContent = 'Joined';
                }

                linkData.appendChild(requestLink);
                tableRow.appendChild(nameData);
                tableRow.appendChild(linkData);
                tableBody.appendChild(tableRow);
            });
        }
    </script>
}